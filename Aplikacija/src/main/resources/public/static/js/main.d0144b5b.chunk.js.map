{"version":3,"sources":["context.js","components/Login.jsx","model/dovanos.js","components/Header.jsx","components/NavigationForAdmin.js","components/AdminDashboard.js","components/UserComponent.js","components/UserList.js","components/GroupComponent.js","components/GroupList.js","components/DocTypeComponent.js","components/DocTypeList.js","App.js","serviceWorker.js","index.js"],"names":["AppDataContext","React","createContext","dovanos","setDovanos","refreshItem","Login","useState","username","setUsername","password","setPassword","className","onSubmit","event","preventDefault","userData","URLSearchParams","append","axios","post","headers","then","resp","console","log","to","catch","e","type","required","value","placeholder","onChange","target","onUsernameChange","onPasswordChange","defaults","withCredentials","serverDovanaToClientDovana","serverDovana","title","id","description","forAdults","image","img","Header","NavigationForAdmin","props","AdminDashboard","src","alt","Component","UserComponent","scope","name","surname","UserList","state","users","get","response","setState","data","error","user","this","map","index","key","onClick","onAddNew","onBack","GroupComponent","GroupList","groups","group","DocTypeComponent","DocTypeList","doctypes","doctype","App","letters","setLetters","appData","refreshProducts","fetch","url","res","ok","Error","status","json","Provider","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d0144b5b.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const AppDataContext = React.createContext({\n  dovanos: [],\n  setDovanos: () => {},\n  refreshItem: () => {}\n});\n\nexport function useMyData() {\n  return React.useContext(AppDataContext);\n}\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useMyData } from \"../context\";\nimport { Redirect } from \"react-router-dom\";\n\naxios.defaults.withCredentials = true;\nexport default function Login() {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    let userData = new URLSearchParams();\n    userData.append(\"username\", username);\n    userData.append(\"password\", password);\n    axios\n      .post(\"http://localhost:8080/login\", userData, {\n        headers: { \"Content-type\": \"application/x-www-form-urlencoded\" }\n      })\n      .then(resp => {\n        console.log(\"user logged in!\");\n        return <Redirect to=\"/admin\" />;\n      })\n      .catch(e => {\n        console.log(e);\n      });\n    event.preventDefault();\n  };\n\n  const onUsernameChange = event => {\n    setUsername(event.target.value);\n  };\n  const onPasswordChange = event => {\n    setPassword(event.target.value);\n  };\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-3\"></div>\n      <form onSubmit={handleSubmit}>\n        <div className=\"row my-3\">\n          <input\n            type=\"text\"\n            required\n            value={username}\n            className=\"form-control col-4\"\n            placeholder=\"Vartotojo vardas\"\n            onChange={event => onUsernameChange(event)}\n          ></input>\n          <input\n            type=\"password\"\n            required\n            value={password}\n            className=\"form-control col-4\"\n            placeholder=\"SlaptaÅ¾odis\"\n            onChange={event => onPasswordChange(event)}\n          ></input>\n          <button className=\"btn btn-dark col-4\" type=\"submit\">\n            Prisijungti\n          </button>\n        </div>\n      </form>\n      <div className=\"col-3\"></div>\n    </div>\n  );\n}\n","export function serverDovanaToClientDovana(serverDovana) {\n  return {\n    title: serverDovana.title,\n    id: serverDovana.id,\n    description: serverDovana.description,\n    forAdults: serverDovana.forAdults,\n    image: serverDovana.img,\n    type: serverDovana.type\n  };\n}\n","import React from \"react\";\nimport \"../App.css\";\n\nexport default function Header() {\n  return (\n    <div className=\"jumbotron jumbotron-fluid p-4 my-0 text-white bg-dark\">\n      <div className=\"col-md-6 px-0\">\n        <h1 className=\"display-4\">DokumentÅ³ valdymo sistema</h1>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nvar NavigationForAdmin = (props) => {\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-dark\">\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                <ul className=\"navbar-nav mr-auto\">\n                    <li className=\"nav-item\">\n                        <Link to=\"/admin\" className=\"nav-link\">Pagrindinis</Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link to=\"/admin/users/add\" className=\"nav-link\">Naujas vartotojas</Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link to=\"/admin/groups/add\" className=\"nav-link\">Nauja grupÄ</Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link to=\"/admin/doctypes/add\" className=\"nav-link\">Naujas dokumentÅ³ tipas</Link>\n                    </li>\n                </ul>\n                <Link to=\"/\">\n                    < button type=\"button\" className=\"btn btn-light\">Logout</button>\n                </Link>\n            </div>\n        </nav>\n    );\n}\n\nexport default NavigationForAdmin;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport NavigationForAdmin from './NavigationForAdmin';\n\n\nclass AdminDashboard extends Component {\n    render() {\n        return (\n            <div>\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <NavigationForAdmin />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"card-deck\">\n                    <div className=\"card\">\n                        <img src=\"...\" className=\"card-img-top\" alt=\"...\" />\n                        <div className=\"card-body\">\n                            <h5 className=\"card-title\">Vartotojai</h5>\n                            <p className=\"card-text\">Naujo vartotojo kÅ«rimas, informacijos atnaujinimas.</p>\n                        </div>\n                        <div className=\"card-footer\">\n                            <Link to={`/admin/users`}><button type=\"button\" className=\"btn btn-secondary btn-lg btn-block\">IÅ¡sami informacija</button></Link>\n                        </div>\n                    </div>\n                    <div className=\"card\">\n                        <img src=\"...\" className=\"card-img-top\" alt=\"...\" />\n                        <div className=\"card-body\">\n                            <h5 className=\"card-title\">GrupÄs</h5>\n                            <p className=\"card-text\">NaujÅ³ grupiÅ³ kÅ«rimas, informacijos atnaujinimas.</p>\n                        </div>\n                        <div className=\"card-footer\">\n                            <Link to={`/admin/groups`}><button type=\"button\" className=\"btn btn-secondary btn-lg btn-block\">IÅ¡sami informacija</button></Link>\n                        </div>\n                    </div>\n                    <div className=\"card\">\n                        <img src=\"...\" className=\"card-img-top\" alt=\"...\" />\n                        <div className=\"card-body\">\n                            <h5 className=\"card-title\">DokumentÅ³ tipai</h5>\n                            <p className=\"card-text\">NaujÅ³ dokumentÅ³ tipÅ³ kÅ«rimas, informacijos atnaujinimas.</p>\n                        </div>\n                        <div className=\"card-footer\">\n                            <Link to={`/admin/doctypes`}><button type=\"button\" className=\"btn btn-secondary btn-lg btn-block\">IÅ¡sami informacija</button></Link>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default AdminDashboard;\n\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst UserComponent = props => {\n    return (\n        <tr>\n            <th scope=\"row\">{props.id}</th>\n            <td>{props.username}</td>\n            <td>{props.name}</td>\n            <td>{props.surname}</td>\n            <td>\n                <Link to={\"admin/users/edit/\" + props.id} className=\"btn btn-light\">\n                    Atnaujinti informacijÄ\n        </Link>\n            </td>\n        </tr>\n    );\n};\n\nexport default UserComponent;\n\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport UserComponent from \"./UserComponent\";\nimport { Link } from 'react-router-dom';\nimport NavigationForAdmin from './NavigationForAdmin';\n\nclass UserList extends Component {\n    constructor() {\n        super();\n        this.state = { users: [] };\n        axios\n            .get(\"http://localhost:8080/api/users\")\n            .then(response => {\n                this.setState({ users: response.data });\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }\n\n    render() {\n        var user = this.state.users.map((user, index) => {\n            return (\n                <UserComponent\n                    key={index}\n                    id={user.id}\n                    username={user.username}\n                    name={user.name}\n                    surname={user.surname}\n                />\n            );\n        });\n        return (\n            <div>\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <NavigationForAdmin />\n                        </div>\n                    </div>\n                </div>\n                <Link to=\"/admin/users/add\"><button type=\"button\" className=\"btn btn-light\" onClick={this.props.onAddNew}>PridÄti naujÄ vartotojÄ</button></Link>\n                <Link to=\"/admin\"><button type=\"button\" className=\"btn btn-light\" onClick={this.props.onBack}>GrÄ¯Å¾ti Ä¯ pradinÄ¯ langÄ</button></Link>\n                <table className=\" text-center table table-striped\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">ID</th>\n                            <th scope=\"col\">Prisijungimo vardas</th>\n                            <th scope=\"col\">Vardas</th>\n                            <th scope=\"col\">PavardÄ</th>\n                        </tr>\n                    </thead>\n                    <tbody>{user}</tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nexport default UserList;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst GroupComponent = props => {\n    return (\n        <tr>\n            <th scope=\"row\">{props.id}</th>\n            <td>{props.title}</td>\n            <td>\n                <Link to={\"admin/groups/edit/\" + props.id} className=\"btn btn-light\">\n                    Atnaujinti informacijÄ\n        </Link>\n            </td>\n        </tr>\n    );\n};\n\nexport default GroupComponent;","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport GroupComponent from \"./GroupComponent\";\nimport { Link } from 'react-router-dom';\nimport NavigationForAdmin from './NavigationForAdmin';\n\nclass GroupList extends Component {\n    constructor() {\n        super();\n        this.state = { groups: [] };\n        axios\n            .get(\"http://localhost:8080/api/groups\")\n            .then(response => {\n                this.setState({ groups: response.data });\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }\n\n    render() {\n        var group = this.state.groups.map((group, index) => {\n            return (\n                <GroupComponent\n                    key={index}\n                    id={group.id}\n                    title={group.title}\n                />\n            );\n        });\n        return (\n            <div>\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <NavigationForAdmin />\n                        </div>\n                    </div>\n                </div>\n                <Link to=\"/admin/groups/add\"><button type=\"button\" className=\"btn btn-light\" onClick={this.props.onAddNew}>PridÄti naujÄ grupÄ</button></Link>\n                <Link to=\"/admin\"><button type=\"button\" className=\"btn btn-light\" onClick={this.props.onBack}>GrÄ¯Å¾ti Ä¯ pradinÄ¯ langÄ</button></Link>\n                <table className=\" text-center table table-striped\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">ID</th>\n                            <th scope=\"col\">GrupÄs pavadinimas</th>\n                        </tr>\n                    </thead>\n                    <tbody>{group}</tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nexport default GroupList;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst DocTypeComponent = props => {\n    return (\n        <tr>\n            <th scope=\"row\">{props.id}</th>\n            <td>{props.title}</td>\n            <td>\n                <Link to={\"admin/doctypes/edit/\" + props.id} className=\"btn btn-light\">\n                    Atnaujinti informacijÄ\n        </Link>\n            </td>\n        </tr>\n    );\n};\n\nexport default DocTypeComponent;","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport DocTypeComponent from \"./DocTypeComponent\";\nimport { Link } from 'react-router-dom';\nimport NavigationForAdmin from './NavigationForAdmin';\n\nclass DocTypeList extends Component {\n    constructor() {\n        super();\n        this.state = { doctypes: [] };\n        axios\n            .get(\"http://localhost:8080/api/doctypes\")\n            .then(response => {\n                this.setState({ doctypes: response.data });\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }\n\n    render() {\n        var doctype = this.state.doctypes.map((doctype, index) => {\n            return (\n                <DocTypeComponent\n                    key={index}\n                    id={doctype.id}\n                    title={doctype.title}\n                />\n            );\n        });\n        return (\n            <div>\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <NavigationForAdmin />\n                        </div>\n                    </div>\n                </div>\n                <Link to=\"/admin/doctypes/add\"><button type=\"button\" className=\"btn btn-light\" onClick={this.props.onAddNew}>PridÄti naujÄ dokumentÅ³ tipÄ</button></Link>\n                <Link to=\"/admin\"><button type=\"button\" className=\"btn btn-light\" onClick={this.props.onBack}>GrÄ¯Å¾ti Ä¯ pradinÄ¯ langÄ</button></Link>\n                <table className=\" text-center table table-striped\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">ID</th>\n                            <th scope=\"col\">DokumentÅ³ tipo pavadinimas</th>\n                        </tr>\n                    </thead>\n                    <tbody>{doctype}</tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nexport default DocTypeList;","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n// import ProductListComponent from \"./components/ProductList\";\n// import ProductPage from \"./components/ProductPage\";\n// import AdminPanel from \"./components/AdminPanel\";\n// import ProductAdministrationComponent from \"./components/ProductAdministration\";\nimport Login from \"./components/Login\";\nimport \"./App.css\";\nimport { serverDovanaToClientDovana } from \"./model/dovanos\";\nimport { Switch, Route } from \"react-router\";\nimport { AppDataContext } from \"./context\";\nimport Header from \"./components/Header\";\nimport AdminDashboard from \"./components/AdminDashboard\";\nimport UserList from \"./components/UserList\";\nimport NavigationForAdmin from \"./components/NavigationForAdmin\";\nimport GroupList from \"./components/GroupList\";\nimport DocTypeList from \"./components/DocTypeList\";\n\n// function ProductPage() {\n//   const appData = useContext(AppDataContext);\n//   return <div>Show a product: {appData.products.join(\", \")}</div>;\n// }\n\nfunction App() {\n  const [dovanos, setDovanos] = useState(\"loading\");\n  const [letters, setLetters] = useState(\"loading\");\n\n  const url = \"http://localhost:8080\";\n  //const url = \"http://localhost:8081/dovanos\";\n\n  const refreshProducts = () => {\n    fetch(url + \"/api/dovanos\")\n      .then(res => {\n        if (!res.ok) throw new Error(`response status ${res.status}`);\n        return res.json();\n      })\n      .then(dovanos => {\n        setDovanos(dovanos.map(serverDovanaToClientDovana));\n      });\n  };\n\n  // const refreshLetters = () => {\n  //   fetch(url + \"/api/letters\")\n  //     .then(res => {\n  //       if (!res.ok) throw new Error(`response status ${res.status}`);\n  //       return res.json();\n  //     })\n  //     .then(letters => {\n  //       setLetters(letters.map(serverLetterToClientLetter));\n  //     });\n  // };\n\n  const appData = {\n    dovanos: dovanos,\n    refreshProducts: refreshProducts,\n    setDovanos: setDovanos,\n    letters: letters,\n    // refreshLetters: refreshLetters,\n    setLetters: setLetters\n  };\n\n  // useEffect(refreshProducts, []);\n  // useEffect(refreshLetters, []);\n\n  return (\n    <AppDataContext.Provider value={appData}>\n      <Header />\n      <Route exact path=\"/\" component={Login} />\n\n      <div className=\"container mx-auto\">\n        <Switch>\n          <Route exact path=\"/admin\" component={AdminDashboard} />\n          <Route exact path=\"/admin/users\" component={UserList} />\n          <Route exact path=\"/admin/groups\" component={GroupList} />\n          <Route exact path=\"/admin/doctypes\" component={DocTypeList} />\n        </Switch>\n      </div>\n    </AppDataContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\nvar NoMatch = props => {\n  var goApp = () => props.history.push(\"/\");\n  return (\n    <div>\n      Route did not match\n      <button onClick={goApp}>Go Home</button>\n    </div>\n  );\n};\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}