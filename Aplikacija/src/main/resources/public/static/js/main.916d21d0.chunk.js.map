{"version":3,"sources":["components/ProductCard.jsx","context.js","components/ProductList.jsx","components/ProductPage.jsx","components/AdminPanel.jsx","components/ProductAdministration.jsx","components/Cart.jsx","components/NavBar.jsx","model/dovanos.js","components/Header.jsx","App.js","serviceWorker.js","index.js"],"names":["ProductCardComponent","console","log","this","props","className","style","width","src","dovana","image","alt","title","description","to","id","React","Component","AppDataContext","createContext","dovanos","setDovanos","refreshItem","ProductListComponent","useContext","length","map","key","ProductCard","ProductPage","appData","find","String","match","params","price","onClick","addCartItem","AdminPanel","url","dovanaList","index","Axios","delete","then","refreshProducts","ProductAdministrationComponent","context","handleTitleChange","event","setState","target","value","handleImageChange","handleTypeChange","type","handleForAdultsChange","forAdults","checked","handleDescriptionChange","saveProduct","mode","put","state","img","history","push","createProduct","post","handleSubmit","preventDefault","Error","isCreateMode","path","dovanosMayHaveLoaded","onSubmit","required","onChange","contextType","Cart","cartItems","products","discardCartItem","cartContents","item","product","p","productId","imageURL","name","quantity","Nav","serverDovanaToClientDovana","serverDovana","Header","App","useState","fetch","res","ok","status","json","useEffect","Provider","exact","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.916d21d0.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass ProductCardComponent extends React.Component {\n  render() {\n    console.log(this.props);\n    return (\n      <div className=\"card mx-2\" style={{ width: \"13rem\" }}>\n        <img\n          src={this.props.dovana.image}\n          className=\"card-img-top img-fluid\"\n          alt=\"\"\n        />\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">{this.props.dovana.title}</h5>\n          <p className=\"card-text m-0 p-0\">{this.props.dovana.description}</p>\n          <Link\n            className=\"btn btn-primary\"\n            to={`/dovanos/${this.props.dovana.id}`}\n          >\n            Daugiau informacijos\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ProductCardComponent;\n","import React from \"react\";\n\nexport const AppDataContext = React.createContext({\n  dovanos: [],\n  setDovanos: () => {},\n  refreshItem: () => {}\n});\n\nexport function useMyData() {\n  return React.useContext(AppDataContext);\n}\n","import React from \"react\";\nimport ProductCardComponent from \"./ProductCard\";\nimport { AppDataContext } from \"../context\";\n\nexport default function ProductListComponent() {\n  const appData = React.useContext(AppDataContext);\n  const dovanos = appData.dovanos;\n\n  return (\n    <div className=\"row\">\n      {dovanos === \"loading\" ? (\n        \"Dovanos kraunasi, palaukite...\"\n      ) : (\n        <div>\n          <p>We sell amazing products, even {dovanos.length} of them!</p>\n          <div className=\"card-deck\">\n            {dovanos.map(dovana => {\n              return (\n                <div className=\"col-3 mx-auto my-3\" key={dovana.id}>\n                  <ProductCardComponent dovana={dovana} />\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { AppDataContext } from \"../context\";\nimport { Link, Redirect } from \"react-router-dom\";\n\nexport default function ProductPage(props) {\n  const appData = React.useContext(AppDataContext);\n  const dovanos = appData.dovanos;\n\n  if (dovanos === \"loading\") return \"Loading\";\n\n  const dovana = dovanos.find(\n    dovana => String(dovana.id) === props.match.params.id\n  );\n  if (!dovana) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <div className=\"container row\">\n      <div className=\"col-4\">\n        <img src={dovana.image} className=\"img-fluid\" alt={dovana.title}></img>\n      </div>\n      <div className=\"col-8\">\n        <h1>{dovana.title}</h1>\n        <h4>{dovana.description}</h4>\n        <h4>Price: {dovana.price}</h4>\n        <Link className=\"btn btn-light\" to=\"/\">\n          Back\n        </Link>\n        <button\n          className=\"btn btn-info mx-2\"\n          onClick={() => appData.addCartItem(dovana.id)}\n        >\n          Add to Cart\n        </button>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { AppDataContext } from \"../context\";\nimport Axios from \"axios\";\n\nexport default function AdminPanel() {\n  const appData = React.useContext(AppDataContext);\n  const dovanos = appData.dovanos;\n  //const url =\"http://localhost:8080\";\n  const url = \"\";\n\n  if (dovanos === \"loading\") return <div>Loading...</div>;\n\n  const dovanaList = dovanos.map((dovana, index) => {\n    function deleteItem() {\n      Axios.delete(`${url}/api/dovanos/${dovana.id}`).then(\n        appData.refreshProducts\n      );\n    }\n\n    return (\n      <div className=\"row my-1\" key={dovana.id}>\n        <div className=\"col-2\">{index + 1}</div>\n        <div className=\"col-2\">\n          <Link to={`/admin/dovanos/${dovana.id}`}>\n            <img src={dovana.image} className=\"img-fluid\" alt=\"\" />\n          </Link>\n        </div>\n        <Link className=\"col-3\" to={`/admin/dovanos/${dovana.id}`}>\n          {dovana.title}\n        </Link>\n        <button className=\"col-2 btn btn-danger\" onClick={deleteItem}>\n          Ištrinti dovaną\n        </button>\n        <hr></hr>\n      </div>\n    );\n  });\n  return (\n    <div className=\"container\">\n      <Link className=\"btn btn-info my-2\" to=\"/admin/dovanos/new\">\n        Sukurti naują dovaną\n      </Link>\n      <div className=\"row\">\n        <div className=\"col-2\">#</div>\n        <div className=\"col-2\">Nuotrauka</div>\n        <div className=\"col-6\">Dovana</div>\n        <div className=\"col-2\"></div>\n      </div>\n      <div>{dovanaList}</div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { AppDataContext } from \"../context\";\nimport Axios from \"axios\";\n\nclass ProductAdministrationComponent extends React.Component {\n  static contextType = AppDataContext;\n\n  constructor(props, context) {\n    super(props, context);\n\n    const isCreateMode = props.match.path === \"/admin/dovanos/new\";\n    this.state = {\n      mode: isCreateMode ? \"create\" : \"edit-loading\",\n      title: \"\",\n      image: \"\",\n      forAdults: false,\n      type: \"\",\n      description: \"\",\n      //url: \"http://localhost:8080\"\n      url: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.dovanosMayHaveLoaded();\n  }\n\n  componentDidUpdate() {\n    this.dovanosMayHaveLoaded();\n  }\n\n  dovanosMayHaveLoaded() {\n    if (this.context.dovanos === \"loading\") return;\n    if (this.state.mode !== \"edit-loading\") return;\n    const dovana = this.context.dovanos.find(\n      dovana => String(dovana.id) === this.props.match.params.id\n    );\n    if (!dovana) {\n      throw new Error(\"Neradau produkto\");\n    }\n    this.setState({\n      mode: \"edit\",\n      id: dovana.id,\n      title: dovana.title,\n      image: dovana.image,\n      type: dovana.type,\n      forAdults: dovana.forAdults,\n      description: dovana.description\n    });\n  }\n\n  handleTitleChange = event => this.setState({ title: event.target.value });\n  handleImageChange = event => this.setState({ image: event.target.value });\n  handleTypeChange = event => this.setState({ type: event.target.value });\n  handleForAdultsChange = event =>\n    this.setState({ forAdults: event.target.checked });\n  handleDescriptionChange = event =>\n    this.setState({ description: event.target.value });\n\n  saveProduct = () => {\n    this.setState({ mode: \"edit-saving\" });\n\n    Axios.put(`${this.state.url}/api/dovanos/${this.props.match.params.id}`, {\n      title: this.state.title,\n      description: this.state.description,\n      img: this.state.image,\n      forAdults: this.state.forAdults,\n      type: this.state.type\n    })\n      .then(this.context.refreshProducts)\n      .then(() => this.props.history.push(\"/admin\"));\n  };\n\n  createProduct = () => {\n    Axios.post(`${this.state.url}/api/dovanos`, {\n      title: this.state.title,\n      description: this.state.description,\n      img: this.state.image,\n      forAdults: this.state.forAdults,\n      type: this.state.type\n    })\n      .then(this.context.refreshProducts)\n      .then(() => this.props.history.push(\"/admin\"));\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    if (this.state.mode === \"edit\") {\n      this.saveProduct();\n    } else if (this.state.mode === \"create\") {\n      this.createProduct();\n    } else if (this.state.mode === \"edit-loading\") {\n      throw new Error(\"Not supposed to be possible to submit in edit-loading\");\n    } else {\n      throw new Error(`Unfamiliar mode ${this.state.mode}`);\n    }\n  };\n\n  render() {\n    if (this.state.mode === \"edit-loading\") {\n      return (\n        <div className=\"container\">\n          <p>Preparing the edit screen...</p>\n        </div>\n      );\n    }\n\n    if (this.state.mode === \"edit-saving\") {\n      return <div>Saving changes...</div>;\n    }\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-4\">\n            <form onSubmit={this.handleSubmit}>\n              <div className=\"form-group\">\n                <label>\n                  Pavadinimas\n                  <input\n                    type=\"text\"\n                    required=\"required\"\n                    className=\"form-control\"\n                    value={this.state.title}\n                    onChange={this.handleTitleChange}\n                  />\n                </label>\n              </div>\n              <div className=\"form-group\">\n                <label>\n                  Aprašymas\n                  <input\n                    type=\"text\"\n                    id=\"description\"\n                    required=\"required\"\n                    className=\"form-control\"\n                    value={this.state.description}\n                    onChange={this.handleDescriptionChange}\n                  />\n                </label>\n              </div>\n              <div className=\"form-group\">\n                <label>\n                  Nuoroda į paveikslėlį\n                  <input\n                    type=\"url\"\n                    required=\"required\"\n                    className=\"form-control\"\n                    value={this.state.image}\n                    onChange={this.handleImageChange}\n                  />\n                </label>\n              </div>\n              <div className=\"form-group\">\n                <label>\n                  Tipas\n                  <input\n                    type=\"text\"\n                    required=\"required\"\n                    className=\"form-control\"\n                    value={this.state.type}\n                    onChange={this.handleTypeChange}\n                  />\n                </label>\n              </div>\n              <div className=\"form-group\">\n                <label>\n                  Suaugusiems\n                  <input\n                    type=\"checkbox\"\n                    className=\"form-control\"\n                    value={this.state.forAdults}\n                    onChange={this.handleForAdultsChange}\n                  />\n                </label>\n              </div>\n\n              <button type=\"submit\" className=\"btn btn-info\">\n                Išsaugoti\n              </button>\n              <button\n                className=\"btn btn-light mx-2\"\n                onClick={() => this.props.history.push(\"/admin\")}\n              >\n                Atšaukti\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ProductAdministrationComponent;\n","import React from \"react\";\nimport { useMyData } from \"../context\";\n\nexport default function Cart() {\n  const { cartItems, products, discardCartItem } = useMyData();\n\n  const cartContents = cartItems.map((item, index) => {\n    const product = products.find(p => p.id === item.productId);\n    if (!product) throw new Error(\"Produktas turejo buti rastas\");\n\n    return (\n      <div className=\"row my-2\" key={product.id}>\n        <div className=\"col-2\">{index + 1}</div>\n        <img\n          className=\"col-1 img-fluid img-thumbnail\"\n          alt=\"\"\n          src={product.imageURL}\n        ></img>\n        <div className=\"col-2\"> {product.name}</div>\n        <div className=\"col-2\">{item.quantity}</div>\n        <button\n          className=\"btn btn-info col-2\"\n          onClick={() => discardCartItem(product.id)}\n        >\n          Remove items\n        </button>\n      </div>\n    );\n  });\n\n  return (\n    <div>\n      <div className=\"row\">\n        <div className=\"col-2\">#</div>\n        <div className=\"col-2\"></div>\n        <div className=\"col-2\">Product</div>\n        <div className=\"col-2\">Quantity</div>\n      </div>\n      {cartContents}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport const Nav = function(props) {\n  return (\n    <nav className=\" mb-2 blue\">\n      <ul className=\"nav row mx-auto justify-content-center \">\n        <li className=\"nav-item col-2\">\n          <Link className=\"nav-link\" to=\"/\">\n            Dovanos\n          </Link>\n        </li>\n        <li className=\"nav-item col-2\">\n          <Link className=\"nav-link\" to=\"/admin\">\n            Admin\n          </Link>\n        </li>\n        <li className=\"col-4\"></li>\n        <li className=\"nav-item col-2\"></li>\n      </ul>\n    </nav>\n  );\n};\n","export function serverDovanaToClientDovana(serverDovana) {\n  return {\n    title: serverDovana.title,\n    id: serverDovana.id,\n    description: serverDovana.description,\n    forAdults: serverDovana.forAdults,\n    image: serverDovana.img,\n    type: serverDovana.type\n  };\n}\n","import React from \"react\";\nimport \"../App.css\";\n\nexport default function Header() {\n  return (\n    <div className=\"jumbotron jumbotron-fluid p-4 my-0 text-white bg-image \">\n      <div className=\"col-md-6 px-0\">\n        <h1 className=\"display-4 font-italic\">Marvelous page!</h1>\n        <p className=\"lead my-3\">\n          My site description couse it is totally important\n        </p>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport ProductListComponent from \"./components/ProductList\";\nimport ProductPage from \"./components/ProductPage\";\nimport AdminPanel from \"./components/AdminPanel\";\nimport ProductAdministrationComponent from \"./components/ProductAdministration\";\nimport Cart from \"./components/Cart\";\nimport \"./App.css\";\nimport { Nav } from \"./components/NavBar\";\nimport { serverDovanaToClientDovana } from \"./model/dovanos\";\nimport { Switch, Route } from \"react-router\";\nimport { AppDataContext } from \"./context\";\nimport Header from \"./components/Header\";\n\n// function ProductPage() {\n//   const appData = useContext(AppDataContext);\n//   return <div>Show a product: {appData.products.join(\", \")}</div>;\n// }\n\nfunction App() {\n  const [dovanos, setDovanos] = useState(\"loading\");\n\n  const refreshProducts = () => {\n    fetch(\"http://localhost:8080/api/dovanos\")\n      .then(res => {\n        if (!res.ok) throw new Error(`response status ${res.status}`);\n        return res.json();\n      })\n      .then(dovanos => {\n        setDovanos(dovanos.map(serverDovanaToClientDovana));\n      });\n  };\n\n  console.log(dovanos);\n\n  const appData = {\n    dovanos: dovanos,\n    refreshProducts: refreshProducts,\n    setDovanos: setDovanos\n  };\n\n  useEffect(refreshProducts, []);\n\n  return (\n    <AppDataContext.Provider value={appData}>\n      <Header />\n      <Nav />\n      <div className=\"container mx-auto\">\n        <Switch>\n          <Route path=\"/\" exact component={ProductListComponent} />\n          <Route path=\"/dovanos\" exact component={ProductListComponent} />\n          <Route path=\"/laiskai\" exact component={Cart} />\n          <Route path=\"/dovanos/:id\" exact component={ProductPage} />\n          <Route path=\"/admin\" exact component={AdminPanel} />\n          <Route\n            path=\"/admin/dovanos/new\"\n            exact\n            component={ProductAdministrationComponent}\n          />\n          <Route\n            path=\"/admin/dovanos/:id\"\n            exact\n            component={ProductAdministrationComponent}\n          />\n        </Switch>\n      </div>\n    </AppDataContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\nvar NoMatch = props => {\n  var goApp = () => props.history.push(\"/\");\n  return (\n    <div>\n      Route did not match\n      <button onClick={goApp}>Go Home</button>\n    </div>\n  );\n};\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}